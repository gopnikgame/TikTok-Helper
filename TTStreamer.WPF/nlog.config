<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog.txt">


	<!-- the targets to write to -->
	<targets>
		<!--https://nlog-project.org/config/?tab=layout-renderers-->
		<!--https://github.com/NLog/NLog/wiki/ColoredConsole-target-->
		<target name="logconsole" xsi:type="ColoredConsole"
			  layout="${logger:shortName=false}${newline}${date}${newline}${message}${newline}"
			  useDefaultRowHighlightingRules="True">
			<highlight-word backgroundColor="Black" foregroundColor="Green" ignoreCase="True" regex="Lifetime|.+Handler|.+Service|.+Controller"/>
		</target>
		<!-- write logs to file  -->
		<target type="UITarget, TTStreamer.WPF" name="UITarget" layout="${date}|${logger:shortName=true}|${uppercase:${level}}${newline}${message}${newline}${exception:format=tostring}" />
		<target xsi:type="File" name="debugfile" fileName="Logs/${shortdate}_debug.log"	layout="${date}|${logger:shortName=true}|${uppercase:${level}}${newline}${message}${newline}${exception:format=tostring}${newline}" />
		<target xsi:type="File" name="errorfile" fileName="Logs/${shortdate}_errors.log" layout="${date}|${logger:shortName=true}|${uppercase:${level}}${newline}${message}${newline}${exception:format=tostring}${newline}" />
		<target xsi:type="File" name="traceHttp" fileName="Logs/${shortdate}_traceHttp.log" layout="${date}|${logger:shortName=true}|${uppercase:${level}}${newline}${message}${newline}${exception:format=tostring}${newline}" />
		<target xsi:type="File" name="traceSocket" fileName="Logs/${shortdate}_traceSocket.log" layout="${date}|${logger:shortName=true}|${uppercase:${level}}${newline}${message}${newline}${exception:format=tostring}${newline}" />
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--<logger name="*" minlevel="Trace" writeTo="UITarget">
			<filters defaultAction='Log'>
				<when condition="logger == 'Microsoft.Hosting.Lifetime'" action="Ignore" />
				<when condition="logger == 'Microsoft.EntityFrameworkCore.Database.Connection'" action="Ignore" />
				<when condition="logger == 'Microsoft.EntityFrameworkCore.Database.Command'" action="Ignore" />
				<when condition="logger == 'Microsoft.EntityFrameworkCore.Update'" action="Ignore" />
				<when condition="logger == 'Microsoft.EntityFrameworkCore.Infrastructure'" action="Ignore" />
				<when condition="logger == 'Microsoft.EntityFrameworkCore.ChangeTracking'" action="Ignore" />
				<when condition="logger == 'Microsoft.EntityFrameworkCore.Query'" action="Ignore" />
			</filters>
		</logger>-->
		
		<logger name="*" minlevel="Debug" writeTo="debugfile">
			<filters defaultAction='Log'>
				<when condition="logger == 'Microsoft.EntityFrameworkCore.Database.Connection'" action="Ignore" />
				<when condition="logger == 'Microsoft.EntityFrameworkCore.Database.Command'" action="Ignore" />
				<when condition="logger == 'Microsoft.EntityFrameworkCore.Update'" action="Ignore" />
				<when condition="logger == 'Microsoft.EntityFrameworkCore.Infrastructure'" action="Ignore" />
				<when condition="logger == 'Microsoft.EntityFrameworkCore.ChangeTracking'" action="Ignore" />
				<when condition="logger == 'Microsoft.EntityFrameworkCore.Query'" action="Ignore" />
			</filters>
		</logger>
		
		<logger name="*" levels="Error" writeTo="errorfile" />
	</rules>
</nlog>